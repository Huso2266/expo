{"version":3,"file":"requireNativeModule.js","sourceRoot":"","sources":["../src/requireNativeModule.ts"],"names":[],"mappings":"AAAA,OAAO,kBAAkB,MAAM,sBAAsB,CAAC;AAWtD;;;;GAIG;AACH,MAAM,UAAU,mBAAmB,CAAmB,UAAkB;IACtE,OAAO,MAAM,CAAC,WAAW,EAAE,CAAC,UAAU,CAAC,IAAI,kBAAkB,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;AAClF,CAAC","sourcesContent":["import NativeModulesProxy from './NativeModulesProxy';\n\ndeclare global {\n  // eslint-disable-next-line no-var\n  var ExpoModules:\n    | undefined\n    | {\n        [key: string]: any;\n      };\n}\n\n/**\n * Imports the object representing the module with given name. In the first place it tries to load\n * the module installed through the JSI and if it wasn't found then from the bridge proxy module.\n * Notice that the modules loaded from the proxy may not support some features like synchronous functions.\n */\nexport function requireNativeModule<ModuleType = any>(moduleName: string): ModuleType {\n  return global.ExpoModules?.[moduleName] ?? NativeModulesProxy[moduleName] ?? {};\n}\n"]}